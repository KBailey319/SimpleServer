const express = require ('express')
const app = express ();
const app = expres ();
const handlebars = require("express-handlebars").create({defaultLayout: 'main'});
app.engine('handlebars', handlebars.engine);
app.set('view engine', 'handlebars');

app.set('port',process.env.PORT || 3000);

app.get('/', (request,response) => {
    response.render('home');
    // response.type('text/plain');***handlebars simplifies this***
    // response.send('./public/index.html');
});

app.get('/about', (request,response) =>{
    response.render('about');
    // response.type('text/plain');***handlebars simplifies this***
    // response.send('./public/about.html')
});

app.use((request,response) => {
    // response.type('text/plain');***handlebars simplifies this***
    response.status(404),
    response.render('404');
    // response.end('404 -Not Found');***handlebars simplifies this***
});

app.listen(app.get('port'), () => {
    console.log('Express started on http://localhost:' + app.get('port') + ';press Ctrl-C to terminate');
});

const http = require('http');
const fs = require('fs');

const hostname = 'localhost';
const port = 3000;

// ***Lines 40-69 were NODE, but Express simplifies this***
// serverStaticFile = (response, path, contentType, responseCode) => {
//     if(!responseCode) responseCode = 200;
//     fe.readFile (_dirname + path, (err,data)=> {
//         if (err) {
//             response.writeHead(500, {"Content-Type": "text/plain"});
//             response.end("500 - Internal Error");
//         } else {
//             response.writeHead(responseCode, {"Content-Type": contentType});
//         }
//     });
// };
// const server = http.createServer((request, response) => {
//     let path = req.url.replace(/\/?(?:\?.*)?$/,"").toLowerCase();
//     switch (path) {
//         case "":
//         serverStaticFile(response, "public/home.html", "text/html");
//         break;
//         case "/about":
//         serverStaticFile(response, "public/about.html", "text/html");
//         break;
//         default:
//         serverStaticFile(response, "public/404.html", "text/html", 404);
//         break;
//     }
// });
// server.listen(port, hostname, () => {
//     console.log(
//         'Server started on http://${hostname}:${port}/; press Ctrl-C to terminate....'
//     );
// });
